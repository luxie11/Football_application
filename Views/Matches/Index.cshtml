
@{
    ViewData["Title"] = "Matches";
}
@model FootballApplication.ViewModels.MatchDetails
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@if (HttpContextAccessor.HttpContext.Session.Get("UserRole") != null
&& BitConverter.ToInt16(HttpContextAccessor.HttpContext.Session.Get("UserRole")) == 1)
{
    <div class="modal">
        <div class="modal-box">
            <span class="close-btn">
                <i class="fa fa-times"></i>
            </span>
            <div class="modal-title">
                <h2>Add new match</h2>
            </div>
            <form class="match-insert" method="post" asp-controller="Matches" asp-action="Insert">
                <div class="modal-content">
                    <div class="input-field">
                        @Html.DropDownList("league", new SelectList(Model.LeaguesList.Select(el => new { Value = el.IdLeagues, Key = el.Name }), "Value", "Key"), "Select league", new { @for = "testas" })
                    </div>
                    <div class="input-field">
                        @Html.DropDownList("homeTeam", new SelectList(Model.TeamList.Select(el => new { Value = el.IdTeam, Key = el.TeamName }), "Value", "Key"), "Select home team")
                    </div>
                    <div class="input-field">
                        @Html.TextBox("homeTeamScore", null, new { @placeholder = "Home team score" })
                    </div>
                    <div class="input-field">
                        @Html.DropDownList("awayTeam", new SelectList(Model.TeamList.Select(el => new { Value = el.IdTeam, Key = el.TeamName }), "Value", "Key"), "Select away team")
                    </div>
                    <div class="input-field">
                        @Html.TextBox("awayTeamScore", null, new { @placeholder = "Away team score" })
                    </div>
                    <div class="input-field">
                        @Html.TextBox("gameweek", null, new { @placeholder = "Gameweek" })
                    </div>
                    <div class="input-field">
                        @Html.TextBox("gameTime", null, new { @placeholder = "Match time" })
                    </div>
                    <div class="input-field">
                        @Html.DropDownList("stadium", new SelectList(Model.StadiumsList.Select(el => new { Value = el.IdStadiums, Key = el.Name }), "Value", "Key"), "Select stadium")
                    </div>
                </div>
                <div class="modal-actions text-right">
                    <div class="submit-button">
                        <button type="submit" class="btn">
                            Submit
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
}


@if (TempData.ContainsKey("InsertSuccess"))
{

    <div class="success-msg">
        <i class="fa fa-check"></i>
        @TempData["InsertSuccess"]
    </div>
}

@if (TempData.ContainsKey("InsertError"))
{
    <div class="error-msg">
        <i class="fa fa-times-circle"></i>
        @TempData["InsertError"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    foreach (var errorMessage in TempData["ErrorMessage"] as IEnumerable<string>)
    {
        <div class="error-msg">
            <i class="fa fa-times-circle"></i>
            @errorMessage
        </div>
    }

}

<div class="row content-title">
    <div class="column-left col-6 center">
    </div>
    <div class="column-right col-6 center">
        @if (HttpContextAccessor.HttpContext.Session.Get("UserRole") != null
&& BitConverter.ToInt16(HttpContextAccessor.HttpContext.Session.Get("UserRole")) == 1)
        {
            <div class="page-actions">
                <div class="button-link add-item float-right">
                    <a href="#" class="table-action">
                        <i class="fa fa-plus"></i>
                        Add new match
                    </a>
                </div>
            </div>
        }
    </div>
</div>
<div class="row">
    <div class="col-12 table-information">
        <div class="table-wrapper">
            <table>
                <thead>
                    <tr>
                        @if (HttpContextAccessor.HttpContext.Session.Get("UserRole") != null
&& BitConverter.ToInt16(HttpContextAccessor.HttpContext.Session.Get("UserRole")) == 1)
                        {
                            <th class="table-title" colspan="7">Matches</th>
                        }
                        else
                        {
                            <th class="table-title" colspan="5">Matches</th>
                        }

                    </tr>
                </thead>

                @if (Model.HeadToHeadMatches.Count != 0)
                {
                    <tbody>
                        @foreach (var item in Model.HeadToHeadMatches)
                        {
                        <tr class="match" data-match-id=@item.id>
                            <td class="game-week">
                                @item.gameWeek
                            </td>
                            <td class="matchtime">
                                @if ((DateTime.Compare(DateTime.Now, item.matchTime.Value.AddHours(1).AddMinutes(50)) > 0)
&& (item.homeTeamScore != null && item.awayTeamScore != null))
                                {
                                    <div>
                                        Full time
                                    </div>
                                }
                                else
                                {
                                    @item.matchTime
                                }
                            </td>
                            <td class="team-name">
                                <div class="club-image align-center float-right" style="padding-left:20px;">
                                    <img src=@item.homeTeamCrest />
                                </div>
                                <div class="club-name align-center justify-right">
                                    @item.homeTeamName
                                </div>
                            </td>
                            <td class="result">
                                @item.homeTeamScore : @item.awayTeamScore
                            </td>
                            <td class="team-name">
                                <div class="club-image align-center float-left">
                                    <img src=@item.awayTeamCrest />
                                </div>
                                <div class="club-name align-center">
                                    @item.awayTeamName
                                </div>
                            </td>
                            @if (HttpContextAccessor.HttpContext.Session.Get("UserRole") != null
                               && BitConverter.ToInt16(HttpContextAccessor.HttpContext.Session.Get("UserRole")) == 1)
                            {
                                <td class="delete-action" data-match-id="@item.id">
                                    <i class="fa fa-trash"></i>
                                </td>
                                <td class="delete-action">
                                    <i class="fa fa-edit"></i>
                                </td>
                            }

                        </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan=@(HttpContextAccessor.HttpContext.Session.Get("UserRole") != null 
                                            && BitConverter.ToInt16(HttpContextAccessor.HttpContext.Session.Get("UserRole")) == 1 ? 4 : 2) >
                                Show items
                                @if (Model.HeadToHeadMatches.PageNumber == 1)
                                {
                                    <label>1</label>
                                }
                                else
                                {
                                    @((Model.HeadToHeadMatches.PageNumber - 1) * Model.HeadToHeadMatches.PageSize + 1)

                                }
                                <label> - </label>
                                @if (Model.HeadToHeadMatches.PageNumber == 1)
                                {
                                    <label>10</label>
                                }
                                else if (Model.HeadToHeadMatches.IsLastPage)
                                {
                                    @(Model.HeadToHeadMatches.TotalItemCount)
                                }
                                else
                                {
                                    @((Model.HeadToHeadMatches.PageNumber + 1) * Model.HeadToHeadMatches.PageSize)
                                }

                                of @Model.HeadToHeadMatches.TotalItemCount
                            </td>
                            <td colspan="3">
                                <div class="pagination menu">
                                    @if (Model.HeadToHeadMatches.HasPreviousPage)
                                    {
                                        <a asp-route-page=@(Model.HeadToHeadMatches.PageNumber - 1) class="icon item">
                                            <i class="fa fa-chevron-left"></i>
                                        </a>
                                    }
                                    @for (int i = 0; i < Model.HeadToHeadMatches.PageCount; i++)
                                    {
                                        if ((i + 1) == Model.HeadToHeadMatches.PageNumber)
                                        {
                                            <a asp-route-page=@(i+1) class="item active-link">
                                                @(i + 1)
                                            </a>
                                        }
                                        else
                                        {
                                            <a asp-route-page=@(i+1) class="item">
                                                @(i + 1)
                                            </a>
                                        }
                                    }
                                    @if (Model.HeadToHeadMatches.HasNextPage)
                                    {
                                        <a asp-route-page=@(Model.HeadToHeadMatches.PageNumber + 1) class="icon item">
                                            <i class="fa fa-chevron-right"></i>
                                        </a>
                                    }

                                </div>
                            </td>
                        </tr>
                </tfoot>
                }
                else
                {
                    <tbody>
                        <tr>
                            @if (HttpContextAccessor.HttpContext.Session.Get("UserRole") != null
&& BitConverter.ToInt16(HttpContextAccessor.HttpContext.Session.Get("UserRole")) == 1)
                            {
                                <td colspan="6">
                                    No information found
                                </td>
                            }
                            else
                            {
                                <td colspan="5">
                                    No information found
                                </td>
                            }
                        </tr>
                    </tbody>
                }
            </table>
        </div>
    </div>
</div>
